user www-data;
worker_processes auto;

pid /var/run/nginx.pid;

# Default error log file
# (this is only used when you don't override error_log on a server{} level)
# [ debug | info | notice | warn | error | crit ]
error_log /var/log/nginx/error.log;

events {
    worker_connections 2048;
    # multi_accept tries to accept() as many connections as
    # possible after nginx gets notification about a new connection.
    # default: off
    multi_accept on;
    # If you have more than one event-model specified at the ./configure
    # script, then you can tell nginx which one do you want to use.
    # By default nginx looks for the most suitable method for your OS
    # at ./configure time.
    #
    # You can see the available event-models and how you can activate
    # it at the ./configure -> http://wiki.nginx.org/NginxOptimizations
    #
    # use [ kqueue | rtsig | epoll | /dev/poll | select | poll ] ;
    use epoll;
    # If a worker process does not have accept mutex it will
    # try to aquire it at least after this delay.
    # default: 500ms
    accept_mutex_delay 50ms;
}

http {
    server_tokens off;
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    # Update charset_types due to updated mime.types
    charset_types text/xml text/plain text/vnd.wap.wml application/x-javascript application/rss+xml text/css application/javascript application/json;

    ## Logfile Options
    access_log /var/log/nginx/access.log;
    log_format main '$remote_addr - $remote_user [$time_local] $status '
    '\"$request\" $body_bytes_sent \"$http_referer\" '
    '\"$http_user_agent\" \"http_x_forwarded_for\"';

    # Caches information about open FDs, freqently accessed files.
    #open_file_cache max=1000 inactive=150s;
    #open_file_cache_valid    160s;
    #open_file_cache_min_uses 2;
    #open_file_cache_errors   on;
    #fastcgi_cache_path /var/cache/nginx levels=1:2 keys_zone=microcache:10m max_size=1000m inactive=60m;

    ## Hostname Options
    server_name_in_redirect on;
    server_names_hash_bucket_size 64;
    server_names_hash_max_size 512;

    ## Size Limits
    client_max_body_size 200M;
    client_header_buffer_size 1k;
    client_body_buffer_size 32k;
    large_client_header_buffers 4 8k;

    ## Timeouts
    client_body_timeout 1m;
    client_header_timeout 1m;
    send_timeout 1m;

    sendfile on;
    keepalive_timeout 65;

    ##
    # Gzip Settings
    ##
    gzip on;

    # disable for old browser
    gzip_disable "msie6";
    # gzip_disable      "MSIE [1-6].(?!.*SV1)"; # old value

    # This sets the response header Vary: Accept-Encoding.
    # Some proxies have a bug in that they serve compressed content to
    # browsers that don't support it. By setting the Vary: Accept-Encoding
    # header, you instruct proxies to store both a compressed and uncompressed
    # version of the content.
    gzip_vary on;
    gzip_proxied any;

    # This assigns the number and the size of the compression buffers.
    gzip_buffers 16 8k;

    # Compression level (1-9).
    # 5 is a perfect compromise between size and cpu usage, offering about
    # 75% reduction for most ascii files (almost identical to level 9).
    gzip_comp_level 5;

    # Enable compression both for HTTP/1.0 and HTTP/1.1
    gzip_http_version 1.0;

    # Don't compress anything that's already small and unlikely to shrink much
    # if at all (the default is 20 bytes, which is bad as that usually leads to
    # larger files after gzipping).
    gzip_min_length 512;

    # Compress all output labeled with one of the following MIME-types.
    gzip_types
    application/atom+xml
    application/javascript
    application/json
    application/ld+json
    application/manifest+json
    application/rdf+xml
    application/rss+xml
    application/schema+json
    application/vnd.geo+json
    application/vnd.ms-fontobject
    application/x-font-ttf
    application/x-javascript
    application/x-web-app-manifest+json
    application/xhtml+xml
    application/xml
    font/eot
    font/opentype
    image/bmp
    image/svg+xml
    image/vnd.microsoft.icon
    image/x-icon
    text/cache-manifest
    text/css
    text/javascript
    text/plain
    text/vcard
    text/vnd.rim.location.xloc
    text/vtt
    text/x-component
    text/x-cross-domain-policy
    text/xml;
    # text/html is always compressed by HttpGzipModule


    ## FastCGI Optins
    ## http://wiki.nginx.org/HttpFastcgiModule#fastcgi_buffers
    ## This directive determines if current request to the FastCGI-server must be aborted in case the client aborts the request to the server.
    fastcgi_ignore_client_abort on;
    ## This directive sets the number and the size of the buffers into which the reply from the FastCGI process in the backend is read.
    fastcgi_buffers 256 16k; # 16k + 256 * 16k = 4112k total
    fastcgi_buffer_size 128k;
    fastcgi_busy_buffers_size 256k;
    ## disable buffering to disk if replies start to exceeed your fastcgi buffers
    fastcgi_max_temp_file_size 0;
    fastcgi_index index.php;
    fastcgi_connect_timeout 120;
    ## allow 4 hrs - pass timeout responsibility to upstream
    fastcgi_read_timeout 14400;
    # fastcgi_send_timeout 120;
    ## This directive determines whether or not to transfer 4xx and 5xx errors back to the client or to allow Nginx to answer with directive error_page.
    fastcgi_intercept_errors on;
    ## When set to the value on, nginx will instruct a FastCGI server to keep connections open.
    fastcgi_keep_conn on;


    # include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-available/*.conf;
}
