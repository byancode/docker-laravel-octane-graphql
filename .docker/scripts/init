#!/bin/bash

DEV=false
PROD=false
TEST=false
TESTING=false
PRODUCTION=false
DEVELOPMENT=false

if [ "$1" == "--prod" ] || [ "$1" == "--production" ]; then
    PRODUCTION=true
    PROD=$PRODUCTION
fi
if [ "$1" == "--dev" ] || [ "$1" == "--development" ]; then
    DEVELOPMENT=true
    DEV=$DEVELOPMENT
fi
if [ "$1" == "--test" ] || [ "$1" == "--testing" ]; then
    TESTING=true
    TEST=$TESTING
fi

source ${LARACKER_BASE_PATH}/.laracker
source ${LARACKER_BASE_PATH}/bin/buildenv

KEY_PATH="${LARACKER_BASE_PATH}/.docker/images/nginx/ssl"
ECHO_SSL_PATH="${LARACKER_BASE_PATH}/.docker/images/echo-server/ssl"

if [ $NGINX_ENABLE_HTTPS == 1 ] && ! [ -x "$(command -v openssl)" ]; then
    echo -e "\nError: openssl is not installed." >&2
    echo -e "Please install openssl then try again.\n" >&2
    exit 1
fi

if [ $NGINX_ENABLE_HTTPS == 1 ] ; then
    echo "Creating a new self-signed certificate for domain '${APP_HOST}'..."
    openssl req -new -newkey rsa:4096 -x509 -sha256 -days 365 -nodes \
    -subj "/C=CA/ST=QC/O=Company, Inc./CN=${APP_HOST}" \
    -out ${KEY_PATH}/${APP_HOST}.crt \
    -keyout ${KEY_PATH}/${APP_HOST}.key 2>/dev/null
    cp -f ${KEY_PATH}/${APP_HOST}.crt ${ECHO_SSL_PATH}/server.crt
    cp -f ${KEY_PATH}/${APP_HOST}.key ${ECHO_SSL_PATH}/server.key
fi

docker-compose \
--env-file ${LARACKER_BASE_PATH}/bin/.env \
--project-directory ${LARACKER_BASE_PATH} \
--project-name "${CONTAINER_PREFIX}" \
--file ${LARACKER_BASE_PATH}/docker-compose.yml \
--file ${LARACKER_BASE_PATH}/docker-compose.override.yml \
up -d --build --no-deps $@ -- $SERVICES_ENABLE
